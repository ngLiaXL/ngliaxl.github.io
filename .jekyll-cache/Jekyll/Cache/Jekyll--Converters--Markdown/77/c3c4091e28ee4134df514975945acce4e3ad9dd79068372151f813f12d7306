I"¶<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class MultiComparator&lt;T&gt; implements Comparator&lt;T&gt; {

    private final List&lt;Comparator&lt;T&gt;&gt; comparators;

    public MultiComparator(List&lt;Comparator&lt;T&gt;&gt; comparators) {
        this.comparators = comparators;
    }

    @SafeVarargs
    public MultiComparator(Comparator&lt;T&gt;... comparators) {
        this(Arrays.asList(comparators));
    }

    @Override
    public int compare(T o1, T o2) {
        for (Comparator&lt;T&gt; c : comparators) {
            int result = c.compare(o1, o2);
            if (result != 0) {
                return result;
            }
        }
        return 0;
    }

    @SafeVarargs
    public static &lt;T&gt; void sort(List&lt;T&gt; list, Comparator&lt;T&gt;... comparators) {
        Collections.sort(list, new MultiComparator&lt;&gt;(comparators));
    }
}
</code></pre></div></div>
:ET